{"componentChunkName":"component---packages-gatsby-theme-blog-core-src-templates-tag-query-js","path":"/blog/tags/visual-studio/","result":{"data":{"allPost":{"posts":[{"id":"6b44988c-6387-5864-87bc-b6db01401200","title":"Downgrading from Visual Studio 2013 Premium to Professional - The easy way","date":"November 04, 2014","excerpt":"Legacy blog post from blogger platform about how to downgrade your visual studio","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Downgrading from Visual Studio 2013 Premium to Professional - The easy way\",\n  \"date\": \"2014-11-04T00:00:00.000Z\",\n  \"excerpt\": \"Legacy blog post from blogger platform about how to downgrade your visual studio\",\n  \"image\": \"./visual-studio.svg\",\n  \"tags\": [\"visual-studio\", \"downgrade\", \"legacy-blog-post\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This post is outdated and only exists for historical reasons\")), mdx(\"p\", null, \"Due to a miss-understanding of the MSDN Subscriber download site,\\nI accidentally downloaded and sequentially used up the trial of Premium.\\nThis was a really annoyance as the internet I am currently on doesn't take to kindly to\\ndownloading 600mb .iso's. It was going to take 12+ hours to complete!\"), mdx(\"p\", null, \"This was unacceptable as I had work I had to get done. So I tried the other option,\\nthe web installer (traditionally I avoid these as I am a hoarder of installers so I don't have to re-download).\\nThis is where the awesomeness happened... It didn't have to download anything!\\n(well at least it doesn't look like it had to) on the installer,\\nthe acquiring progress bar when through allot faster than it should have and it only took 10-20 minutes to install,\\nwhich from previous memories is the same install time as via the .iso!\"), mdx(\"p\", null, \"This speed increase (from 12+ hours to 20 minuets) could be caused by either:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A. The network policies favor the method the web installer used (don't think so)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"B. The download speed on the .iso from Microsoft is capped at 100kb/s (I hope not)\\nOR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"C. It re-used my premium's install data to not have to download everything again\\n(What I think happened as it downloaded to the same folder as Premium and I couldn't launch it until I uninstalled Premium)\")), mdx(\"p\", null, \"Then all I had to do was uninstall Premium from my Add and Remove Programs (both Premium and Professional showed up)\\nthen enter my key given via the MSDN Subscriber portal and BAM! I had my Visual Studio up and running again.\\nAlso, as an extra spurt of luck, I didn't loose my recent projects. This is only a small thing,\\nbut I really was dreading un-installing and potentially loosing my file history.\"), mdx(\"p\", null, \"I would love to hear in the comments from anyone else who was having this problem and if my solution had\\nthe same outcome for them. Or if you know how the web installer works, maybe either confirm or deny my theory.\"), mdx(\"p\", null, \"Thanks for reading!\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/blog/2014/11/downgrading-from-visual-studio-2013/","tags":["visual-studio","downgrade","legacy-blog-post"],"caption":null,"embeddedImagesLocal":null,"image":{"full":null,"thumbnail":null,"fixed":null,"extension":"svg","publicURL":"/static/dde49d9d281f1e016e58c4a3c6fae645/visual-studio.svg"}}]}},"pageContext":{"name":"visual-studio"}},"staticQueryHashes":["1849085223","4250269005"]}